// <auto-generated />
using System;
using JacarandaCasaDeBrincar.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace JacarandaCasaDeBrincar.Data.Migrations
{
    [DbContext(typeof(JacarandaDbContext))]
    [Migration("20210123164038_updateModels")]
    partial class updateModels
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("GuardianStudent", b =>
                {
                    b.Property<Guid>("GuardiansId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StudentsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GuardiansId", "StudentsId");

                    b.HasIndex("StudentsId");

                    b.ToTable("GuardianStudent");
                });

            modelBuilder.Entity("JacarandaCasaDeBrincar.Business.Models.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("varchar(9)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Complement")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Neighborhood")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Addresses", "jacaranda");
                });

            modelBuilder.Entity("JacarandaCasaDeBrincar.Business.Models.Allergie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<Guid?>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("Allergies", "jacaranda");
                });

            modelBuilder.Entity("JacarandaCasaDeBrincar.Business.Models.Contact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<string>("PhoneOne")
                        .IsRequired()
                        .HasColumnType("varchar(14)");

                    b.Property<string>("PhoneTwo")
                        .HasColumnType("varchar(14)");

                    b.HasKey("Id");

                    b.ToTable("Contacts", "jacaranda");
                });

            modelBuilder.Entity("JacarandaCasaDeBrincar.Business.Models.Guardian", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BirthDay")
                        .HasColumnType("datetime2");

                    b.Property<string>("CompanyName")
                        .HasColumnType("varchar(250)");

                    b.Property<Guid?>("ContactId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("varchar(14)");

                    b.Property<bool>("IsResponsable")
                        .HasColumnType("bit");

                    b.Property<string>("Kinship")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Occupation")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Rg")
                        .IsRequired()
                        .HasColumnType("varchar(12)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("ContactId");

                    b.ToTable("Guardians", "jacaranda");
                });

            modelBuilder.Entity("JacarandaCasaDeBrincar.Business.Models.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BirthDay")
                        .HasColumnType("datetime2");

                    b.Property<string>("BloodType")
                        .IsRequired()
                        .HasColumnType("varchar(3)");

                    b.Property<string>("Cpf")
                        .HasColumnType("varchar(14)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Picture")
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("Rg")
                        .HasColumnType("varchar(12)");

                    b.HasKey("Id");

                    b.ToTable("Students", "jacaranda");
                });

            modelBuilder.Entity("GuardianStudent", b =>
                {
                    b.HasOne("JacarandaCasaDeBrincar.Business.Models.Guardian", null)
                        .WithMany()
                        .HasForeignKey("GuardiansId")
                        .IsRequired();

                    b.HasOne("JacarandaCasaDeBrincar.Business.Models.Student", null)
                        .WithMany()
                        .HasForeignKey("StudentsId")
                        .IsRequired();
                });

            modelBuilder.Entity("JacarandaCasaDeBrincar.Business.Models.Allergie", b =>
                {
                    b.HasOne("JacarandaCasaDeBrincar.Business.Models.Student", null)
                        .WithMany("Allergies")
                        .HasForeignKey("StudentId");
                });

            modelBuilder.Entity("JacarandaCasaDeBrincar.Business.Models.Guardian", b =>
                {
                    b.HasOne("JacarandaCasaDeBrincar.Business.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.HasOne("JacarandaCasaDeBrincar.Business.Models.Contact", "Contact")
                        .WithMany()
                        .HasForeignKey("ContactId");

                    b.Navigation("Address");

                    b.Navigation("Contact");
                });

            modelBuilder.Entity("JacarandaCasaDeBrincar.Business.Models.Student", b =>
                {
                    b.Navigation("Allergies");
                });
#pragma warning restore 612, 618
        }
    }
}
